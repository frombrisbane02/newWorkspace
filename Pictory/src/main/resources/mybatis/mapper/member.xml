<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.mapper.member">	
	<select id="memberIsLogin" parameterType="Map" resultType="String">
		<!-- SELECT * FROM USERS WHERE userId=#{userId} AND userPassword=#{userPassword} -->
		SELECT a.authorities,b.* FROM authorities a JOIN users b ON a.userno=b.userno WHERE userId=#{userId} AND userPassword=#{userPassword}
	</select>
	
	<select id="memberCheck" parameterType="Map" resultType="int">
		SELECT count(*) from USERS where userId='#{userId}'
	</select>
	
	<!-- 회원가입 -->
	<insert id="memberInsert" parameterType="MemberDTO">
		<selectKey keyProperty="userNo" resultType="int" order="BEFORE">
		SELECT SEQ_USERS.NEXTVAL FROM DUAL
		</selectKey>
			INSERT ALL
			INTO users(userNo,userId,userPassword,userEmail,userName) VALUES (SEQ_USERS.CURRVAL,#{userId},#{userPassword},#{userEmail},#{userName})
			INTO authorities(userNo,authorities,enabled) VALUES (SEQ_USERS.CURRVAL,default,default)
			SELECT * FROM DUAL
	</insert>
	
	<!-- 카카오 회원가입 -->
	<insert id="kakaoInsert" parameterType="Map">
		<selectKey keyProperty="userNo" resultType="int" order="BEFORE">
		SELECT SEQ_USERS.NEXTVAL FROM DUAL
		</selectKey>
			INSERT ALL
			INTO users(userNo,userId,userPassword,userEmail,userName,userNickname,userProfile) VALUES (#{userNo},#{userId},#{userPassword},#{userEmail},#{userName},#{userNickname},#{userProfile})
			INTO authorities(userNo,authorities,enabled) VALUES (SEQ_USERS.CURRVAL,default,1)
			SELECT * FROM DUAL
	</insert>
	 
	<!-- 마이페이지 회원정보 불러오기 쿼리 -->
	<select id="readMember" parameterType="String" resultType="MemberDTO">
		SELECT *
		FROM USERS
		WHERE USERID = #{userId}
	</select>
	
	<!-- 마이페이지 비밀번호 변경 쿼리 -->
	<update id="updateMemberPassword" parameterType="MemberDTO">
		UPDATE USERS 
		SET USERPASSWORD = #{userPassword}
		WHERE
		USERID = #{userId} 
	</update>
	
	<!-- 마이페이지 회원정보 변경 쿼리 -->
	<update id="updateMember" parameterType="MemberDTO">
		UPDATE users 
		SET USERNAME = #{userName}
		, USERNICKNAME = #{userNickname}
		, USEREMAIL = #{userEmail}
		, USERSELF = #{userSelf}
		<if test="userProfile != null">
		, USERPROFILE = #{userProfile}
		</if>
		where USERID = #{userId}
	</update>
	
	<!-- 마이페이지 장바구니 목록 불러오기 쿼리-->
   <select id="selectMyCart" parameterType="String" resultType="MyCartDTO">
      SELECT cart.USERNO, u.USERNICKNAME, product.PDNO, product.PHOTONO, product.PDPRICE, photo.PHOTONAME, photo.PHOTOURL
      FROM CART cart 
      INNER JOIN PRODUCT product 
      ON cart.PDNO = product.PDNO 
      INNER JOIN PHOTO photo
      ON product.PHOTONO = photo.PHOTONO 
      INNER JOIN USERS u 
      ON cart.USERNO = u.USERNO 
      WHERE u.USERId = #{userId}
   </select>
	
	<!-- 장바구니 삭제용 쿼리-->
	<delete id="deleteMyCart" parameterType="int">
		DELETE FROM CART cart
		WHERE cart.USERNO = #{userNo}
	</delete>
	
	<!-- 좋아요 한 포스트 조회용 쿼리-->
	<select id="selectLikePost" parameterType="int" resultType="SavePostDTO">
		SELECT post.POSTNO AS postNo, photo.PHOTONAME, photo.PHOTOURL, u.USERPROFILE AS postUserProfile, u.USERNICKNAME AS postUserNickName  
		FROM LIKES l   
		INNER JOIN POST post   
		ON l.POSTNO  = post.POSTNO    
		INNER JOIN PHOTO photo   
		ON post.POSTNO  = photo.POSTNO   
		INNER JOIN USERS u    
		ON post.USERNO = u.USERNO    
		WHERE l.USERNO  = #{userNo}
	</select>
	
	<!-- 내가 산 사진 조회용 쿼리 -->
	<select id="selectBuyPost" parameterType="int" resultType="SavePostDTO">
		SELECT PHOTO.POSTNO AS postNo , photo.PHOTONAME, photo.PHOTOURL, u.USERPROFILE AS postUserProfile, u.USERNICKNAME AS postUserNickName  
		FROM PAYMENT payment    
		INNER JOIN PDORDER orders 
		ON PAYMENT.PAYMENTNO  = orders.PAYMENTNO    
		INNER JOIN PRODUCT product 
		ON product.PDNO = orders.PDNO
		INNER JOIN PHOTO photo 
		ON PHOTO.PHOTONO = product.PHOTONO 
		INNER JOIN USERS u    
		ON PAYMENT.USERNO = u.USERNO    
		WHERE u.USERNO  = #{userNo}   
	</select>
	
	<select id="selectPost" parameterType="int" resultType="PostDTO">
		SELECT * FROM POST
		WHERE POSTNO = #{postNo}
	</select>
	
	<select id="selectMember" parameterType="int" resultType="MemberDTO">
		SELECT * FROM USERS
		WHERE USERNO = #{userNo}
	</select>
	
	<!-- 좋아요 삭제용 쿼리-->
	<delete id="deleteLikePost" parameterType="int">
		DELETE FROM LIKES likes
		WHERE likes.USERNO = #{userNo}
	</delete>
	
</mapper>