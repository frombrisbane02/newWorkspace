<?xml version="1.0" encoding="UTF-8"?>

<!-- ========================= 메세지 ======================= -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper  namespace="mybatis.mapper.message">
<!-- 메세지 리스트 가져오기 -->
<select id="message_list" parameterType="MessageDTO" resultType="MessageDTO">
    select dmNo, dmRoom, sendNick, recvNick, to_date(sendTime, '%Y-%m-%d %H:%i') sendTime, readTime, dmContent, readCheck
    from DM
    where dmNo in (select max(dmNo) from DM group by dmRoom) and (sendNick = #{nick} or recvNick=#{nick})
    order by dmNo DESC;
</select>

<!-- 메세지 list에서 상대방 profile 가져오기 -->
<select id="get_other_profile" parameterType="MessageDTO" resultType="String">
    select userProfile from users
    <choose>
        <when test="sendNick == nick">
            where nick = #{recvNick}
        </when>
        <otherwise>
            where nick = #{sendNick}
        </otherwise>
    </choose>
</select>

<!-- 안읽은 메세지 갯수 가져오기 -->
<select id="count_unread" parameterType="MessageDTO" resultType="Int">
    select count(dmNo) from DM
    where recvNick=#{nick} and readCheck=0 and dmRoom=#{dmRoom}
</select>

<!-- 메세지 내용 가져오기 -->
<select id="room_content_list" parameterType="MessageDTO" resultType="MessageDTO">
    select d.dmNo, d.dmRoom, d.sendNick, d.recvNick, date_format(d.sendTime, '%Y-%m-%d %H:%i') sendTime, d.readTime, d.dmContent, d.readCheck, u.profile
    from DM d left outer join users u
    on d.sendNick = u.userId
    <choose>
        <when test="dmRoom != 0">
            where dmRoom=#{dmRoom}
        </when>
        <otherwise>
            where (recvNick = #{recvNick} and sendNick = #{userId}) or (sendNick = #{recvNick} and recvNick = #{userId})
        </otherwise>
    </choose>

</select>

<!-- 메세지 읽음 처리 -->
<update id="message_read_chk" parameterType="MessageDTO">
    update DM set readCheck=1
    <choose>
        <when test="room != 0">
            where dmRoom=#{dmRoom} and readCheck=0 and recvNick=#{userId}
        </when>
        <otherwise>
            where sendNick=#{recvNick} and readCheck=0 and recvNick=#{userId}
        </otherwise>
    </choose>

</update>

<!-- 메세지리스트에서 메세지 보내기 -->
<insert id="messageSendInlist" parameterType="MessageDTO">
    <choose>
        <when test="dmRoom != 0">
            insert into DM values(0, #{dmRoom}, #{sendNick}, #{recvNick}, now(), now(), #{dmContent}, 0);
        </when>
        <otherwise>
            insert into DM values(0, #{dmRoom}, #{sendNick}, #{recvNick}, now(), now(), #{dmContent}, 0);
        </otherwise>
    </choose>
</insert>

<!-- room 번호 최댓값 구하기 -->
<select id="max_room"  parameterType="MessageDTO" resultType="Int">
    select max(dmRoom) from DM
</select>

<!-- 메세지 이력이 있는지 검색 -->
<select id="exist_chat" parameterType="MessageDTO" resultType="Int">
    select count(dmNo) from DM 
    where (recvNick = #{recvNick} and sendNick=#{sendNick}) or (sendNick = #{recvNick} and recvNick=#{sendNick})
</select>

<!-- 기존 메세지 내역의 room 번호를 가져옴 -->
<select id="select_room"  parameterType="MessageDTO" resultType="String">
    select dmRoom from DM
    where (recvNick = #{recvNick} and sendNick=#{sendNick}) or (sendNick = #{recvNick} and recvNick=#{sendNick})
    limit 0,1
</select>
</mapper>